//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/05_Models/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""0cc0879e-cac7-45df-be1c-a27e58d38436"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""4b2cf14d-aa42-48c1-95b9-cf6f11dffc7b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Use_Skill_1"",
                    ""type"": ""Button"",
                    ""id"": ""2d5f82cd-0c4a-48d8-9538-bfada999c922"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Use_Skill_2"",
                    ""type"": ""Button"",
                    ""id"": ""7d5079f9-8503-43ab-8e76-f0df8f07bb84"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Use_Skill_3"",
                    ""type"": ""Button"",
                    ""id"": ""06397fa4-87c5-449e-b472-3eeae467dbc2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Use_Skill_4"",
                    ""type"": ""Button"",
                    ""id"": ""a35100a6-2070-458e-b9be-1b8ba25e8f19"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inventory"",
                    ""type"": ""Button"",
                    ""id"": ""aa376a94-38de-4e18-953f-2f58c8937666"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NPCInteration"",
                    ""type"": ""Button"",
                    ""id"": ""03e74c4e-e198-4e99-b19f-b0070f74880c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Paused"",
                    ""type"": ""Button"",
                    ""id"": ""bf5c0a31-384e-42eb-8ff4-ac636212cf1e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Use_Potion_1"",
                    ""type"": ""Button"",
                    ""id"": ""939ed415-2879-4388-9688-a9072ccf3f80"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Use_Potion_2"",
                    ""type"": ""Button"",
                    ""id"": ""04b82f81-469f-42f0-8175-23884d43c824"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Map"",
                    ""type"": ""Button"",
                    ""id"": ""bc02b134-2f3b-4d1a-96a0-11fa9958cddc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""69cdba9c-dc47-4025-84d8-8d6daed6ccd4"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""6e15104f-8441-4469-b9f6-8b2ff18a1480"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""e954282d-c792-44b1-9b4a-5ec521f4c7b4"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""321833e5-85bc-4cd9-8cc9-19b49d8c1550"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""c9f320ff-fb42-4669-b685-f49f7b7bb9da"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""90c87da6-8f93-494b-9b12-29937dd7cec8"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Use_Skill_1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9cbee1a3-3de0-41bf-8896-09d33e30c287"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Use_Skill_2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cc61b30d-39fc-4304-8785-4e51182fceb3"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Use_Skill_3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""54e295a2-a89a-4591-b288-8e049789f4c1"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Use_Skill_4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ecaf8487-cbea-4074-946a-1c13e1bf2be1"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c63efe14-c749-4470-b441-1f3e7c04c761"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NPCInteration"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b050036b-c52d-4188-9c14-013e7060fbf2"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Paused"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6e29ecf9-e2ae-48da-8460-02a22730ba79"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Use_Potion_1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b5c876e2-54ab-464a-b98f-ae94eda8e5d0"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Use_Potion_2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""302cf3d8-fbfc-45a2-b094-798093a3c1b6"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Map"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Dialogue"",
            ""id"": ""2cc82232-396f-410b-8a95-8374595b0d0c"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""6c134b15-4f1e-458c-853b-c0f666f75f7b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""607f6457-0b34-428d-ac6d-9d872fa535b6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""625c9b7d-1cf9-4e42-a4a9-115ea0df9bd0"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e09db5e3-21ee-4aed-8558-b798ce64aca2"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a9eea76f-7259-440c-8050-245581b15661"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""4b919e98-3d34-49f4-9c25-8cd15962917a"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""56ff0127-c1d0-4d2b-9131-c8ed05825b7b"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""29a2ce4e-32fe-447a-a82d-e5ba8b65eaaf"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""dbfd12ae-d54f-4fbc-9398-9690e391af6c"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_Use_Skill_1 = m_Player.FindAction("Use_Skill_1", throwIfNotFound: true);
        m_Player_Use_Skill_2 = m_Player.FindAction("Use_Skill_2", throwIfNotFound: true);
        m_Player_Use_Skill_3 = m_Player.FindAction("Use_Skill_3", throwIfNotFound: true);
        m_Player_Use_Skill_4 = m_Player.FindAction("Use_Skill_4", throwIfNotFound: true);
        m_Player_Inventory = m_Player.FindAction("Inventory", throwIfNotFound: true);
        m_Player_NPCInteration = m_Player.FindAction("NPCInteration", throwIfNotFound: true);
        m_Player_Paused = m_Player.FindAction("Paused", throwIfNotFound: true);
        m_Player_Use_Potion_1 = m_Player.FindAction("Use_Potion_1", throwIfNotFound: true);
        m_Player_Use_Potion_2 = m_Player.FindAction("Use_Potion_2", throwIfNotFound: true);
        m_Player_Map = m_Player.FindAction("Map", throwIfNotFound: true);
        // Dialogue
        m_Dialogue = asset.FindActionMap("Dialogue", throwIfNotFound: true);
        m_Dialogue_Move = m_Dialogue.FindAction("Move", throwIfNotFound: true);
        m_Dialogue_Submit = m_Dialogue.FindAction("Submit", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_Use_Skill_1;
    private readonly InputAction m_Player_Use_Skill_2;
    private readonly InputAction m_Player_Use_Skill_3;
    private readonly InputAction m_Player_Use_Skill_4;
    private readonly InputAction m_Player_Inventory;
    private readonly InputAction m_Player_NPCInteration;
    private readonly InputAction m_Player_Paused;
    private readonly InputAction m_Player_Use_Potion_1;
    private readonly InputAction m_Player_Use_Potion_2;
    private readonly InputAction m_Player_Map;
    public struct PlayerActions
    {
        private @PlayerInputActions m_Wrapper;
        public PlayerActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @Use_Skill_1 => m_Wrapper.m_Player_Use_Skill_1;
        public InputAction @Use_Skill_2 => m_Wrapper.m_Player_Use_Skill_2;
        public InputAction @Use_Skill_3 => m_Wrapper.m_Player_Use_Skill_3;
        public InputAction @Use_Skill_4 => m_Wrapper.m_Player_Use_Skill_4;
        public InputAction @Inventory => m_Wrapper.m_Player_Inventory;
        public InputAction @NPCInteration => m_Wrapper.m_Player_NPCInteration;
        public InputAction @Paused => m_Wrapper.m_Player_Paused;
        public InputAction @Use_Potion_1 => m_Wrapper.m_Player_Use_Potion_1;
        public InputAction @Use_Potion_2 => m_Wrapper.m_Player_Use_Potion_2;
        public InputAction @Map => m_Wrapper.m_Player_Map;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Use_Skill_1.started += instance.OnUse_Skill_1;
            @Use_Skill_1.performed += instance.OnUse_Skill_1;
            @Use_Skill_1.canceled += instance.OnUse_Skill_1;
            @Use_Skill_2.started += instance.OnUse_Skill_2;
            @Use_Skill_2.performed += instance.OnUse_Skill_2;
            @Use_Skill_2.canceled += instance.OnUse_Skill_2;
            @Use_Skill_3.started += instance.OnUse_Skill_3;
            @Use_Skill_3.performed += instance.OnUse_Skill_3;
            @Use_Skill_3.canceled += instance.OnUse_Skill_3;
            @Use_Skill_4.started += instance.OnUse_Skill_4;
            @Use_Skill_4.performed += instance.OnUse_Skill_4;
            @Use_Skill_4.canceled += instance.OnUse_Skill_4;
            @Inventory.started += instance.OnInventory;
            @Inventory.performed += instance.OnInventory;
            @Inventory.canceled += instance.OnInventory;
            @NPCInteration.started += instance.OnNPCInteration;
            @NPCInteration.performed += instance.OnNPCInteration;
            @NPCInteration.canceled += instance.OnNPCInteration;
            @Paused.started += instance.OnPaused;
            @Paused.performed += instance.OnPaused;
            @Paused.canceled += instance.OnPaused;
            @Use_Potion_1.started += instance.OnUse_Potion_1;
            @Use_Potion_1.performed += instance.OnUse_Potion_1;
            @Use_Potion_1.canceled += instance.OnUse_Potion_1;
            @Use_Potion_2.started += instance.OnUse_Potion_2;
            @Use_Potion_2.performed += instance.OnUse_Potion_2;
            @Use_Potion_2.canceled += instance.OnUse_Potion_2;
            @Map.started += instance.OnMap;
            @Map.performed += instance.OnMap;
            @Map.canceled += instance.OnMap;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Use_Skill_1.started -= instance.OnUse_Skill_1;
            @Use_Skill_1.performed -= instance.OnUse_Skill_1;
            @Use_Skill_1.canceled -= instance.OnUse_Skill_1;
            @Use_Skill_2.started -= instance.OnUse_Skill_2;
            @Use_Skill_2.performed -= instance.OnUse_Skill_2;
            @Use_Skill_2.canceled -= instance.OnUse_Skill_2;
            @Use_Skill_3.started -= instance.OnUse_Skill_3;
            @Use_Skill_3.performed -= instance.OnUse_Skill_3;
            @Use_Skill_3.canceled -= instance.OnUse_Skill_3;
            @Use_Skill_4.started -= instance.OnUse_Skill_4;
            @Use_Skill_4.performed -= instance.OnUse_Skill_4;
            @Use_Skill_4.canceled -= instance.OnUse_Skill_4;
            @Inventory.started -= instance.OnInventory;
            @Inventory.performed -= instance.OnInventory;
            @Inventory.canceled -= instance.OnInventory;
            @NPCInteration.started -= instance.OnNPCInteration;
            @NPCInteration.performed -= instance.OnNPCInteration;
            @NPCInteration.canceled -= instance.OnNPCInteration;
            @Paused.started -= instance.OnPaused;
            @Paused.performed -= instance.OnPaused;
            @Paused.canceled -= instance.OnPaused;
            @Use_Potion_1.started -= instance.OnUse_Potion_1;
            @Use_Potion_1.performed -= instance.OnUse_Potion_1;
            @Use_Potion_1.canceled -= instance.OnUse_Potion_1;
            @Use_Potion_2.started -= instance.OnUse_Potion_2;
            @Use_Potion_2.performed -= instance.OnUse_Potion_2;
            @Use_Potion_2.canceled -= instance.OnUse_Potion_2;
            @Map.started -= instance.OnMap;
            @Map.performed -= instance.OnMap;
            @Map.canceled -= instance.OnMap;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // Dialogue
    private readonly InputActionMap m_Dialogue;
    private List<IDialogueActions> m_DialogueActionsCallbackInterfaces = new List<IDialogueActions>();
    private readonly InputAction m_Dialogue_Move;
    private readonly InputAction m_Dialogue_Submit;
    public struct DialogueActions
    {
        private @PlayerInputActions m_Wrapper;
        public DialogueActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Dialogue_Move;
        public InputAction @Submit => m_Wrapper.m_Dialogue_Submit;
        public InputActionMap Get() { return m_Wrapper.m_Dialogue; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DialogueActions set) { return set.Get(); }
        public void AddCallbacks(IDialogueActions instance)
        {
            if (instance == null || m_Wrapper.m_DialogueActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DialogueActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Submit.started += instance.OnSubmit;
            @Submit.performed += instance.OnSubmit;
            @Submit.canceled += instance.OnSubmit;
        }

        private void UnregisterCallbacks(IDialogueActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Submit.started -= instance.OnSubmit;
            @Submit.performed -= instance.OnSubmit;
            @Submit.canceled -= instance.OnSubmit;
        }

        public void RemoveCallbacks(IDialogueActions instance)
        {
            if (m_Wrapper.m_DialogueActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IDialogueActions instance)
        {
            foreach (var item in m_Wrapper.m_DialogueActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DialogueActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public DialogueActions @Dialogue => new DialogueActions(this);
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnUse_Skill_1(InputAction.CallbackContext context);
        void OnUse_Skill_2(InputAction.CallbackContext context);
        void OnUse_Skill_3(InputAction.CallbackContext context);
        void OnUse_Skill_4(InputAction.CallbackContext context);
        void OnInventory(InputAction.CallbackContext context);
        void OnNPCInteration(InputAction.CallbackContext context);
        void OnPaused(InputAction.CallbackContext context);
        void OnUse_Potion_1(InputAction.CallbackContext context);
        void OnUse_Potion_2(InputAction.CallbackContext context);
        void OnMap(InputAction.CallbackContext context);
    }
    public interface IDialogueActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnSubmit(InputAction.CallbackContext context);
    }
}
